/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Optional, Renderer } from '@angular/core';
import { NgControl } from '@angular/forms';
import { HandlePropChanges } from '../shared/index';
var MzTextareaDirective = /** @class */ (function (_super) {
    tslib_1.__extends(MzTextareaDirective, _super);
    function MzTextareaDirective(ngControl, elementRef, renderer) {
        var _this = _super.call(this) || this;
        _this.ngControl = ngControl;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        return _this;
    }
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initHandlers();
        this.initElements();
        this.initTextareaSubscription();
        this.handleProperties();
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.textareaValueSubscription) {
            this.textareaValueSubscription.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.initHandlers = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.handlers = {
            label: function () { return _this.handleLabel(); },
            length: function () { return _this.handleLength(); },
            placeholder: function () { return _this.handlePlaceholder(); },
        };
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.initElements = /**
     * @return {?}
     */
    function () {
        this.textareaElement = $(this.elementRef.nativeElement);
        this.textareaContainerElement = $(this.elementRef.nativeElement).parent('.input-field');
        this.labelElement = this.createLabelElement();
        this.initTextarea();
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.initTextarea = /**
     * @return {?}
     */
    function () {
        this.renderer.setElementClass(this.textareaElement[0], 'materialize-textarea', true);
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.initTextareaSubscription = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.ngControl) {
            this.textareaValueSubscription = this.ngControl.valueChanges.subscribe(function () { return _this.setLabelActive(); });
        }
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.createLabelElement = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ labelElement = document.createElement('label');
        labelElement.setAttribute('for', this.id);
        this.renderer.invokeElementMethod(this.textareaElement, 'after', [labelElement]);
        return $(labelElement);
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.handleProperties = /**
     * @return {?}
     */
    function () {
        if (this.textareaContainerElement.length === 0) {
            console.error('Textarea must be placed inside a [mz-textarea-container] tag', this.textareaElement);
            return;
        }
        _super.prototype.executePropHandlers.call(this);
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.handleLabel = /**
     * @return {?}
     */
    function () {
        if (this.placeholder || this.textareaElement.val()) {
            this.renderer.setElementClass(this.labelElement[0], 'active', true);
        }
        this.renderer.invokeElementMethod(this.labelElement, 'text', [this.label]);
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.handleLength = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ length = this.length ? this.length.toString() : null;
        this.renderer.setElementAttribute(this.textareaElement[0], 'data-length', length);
        if (length) {
            this.setCharacterCount();
        }
        else {
            this.removeCharacterCount();
        }
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.handlePlaceholder = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ placeholder = !!this.placeholder ? this.placeholder : null;
        this.renderer.setElementAttribute(this.textareaElement[0], 'placeholder', placeholder);
        this.setLabelActive();
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.setCharacterCount = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.renderer.invokeElementMethod(this.textareaElement, 'characterCounter');
        // force validation
        // need setTimeout otherwise it wont trigger validation right away
        setTimeout(function () {
            _this.renderer.invokeElementMethod(_this.textareaElement, 'trigger', ['input']);
            _this.renderer.invokeElementMethod(_this.textareaElement, 'trigger', ['blur']);
        });
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.setLabelActive = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // need setTimeout otherwise it wont make label float in some circonstances
        // for example: forcing validation for example, reseting form programmaticaly, ...
        setTimeout(function () {
            var /** @type {?} */ textareaValue = (/** @type {?} */ (_this.textareaElement[0])).value;
            var /** @type {?} */ isActive = !!_this.placeholder || !!textareaValue;
            _this.renderer.setElementClass(_this.labelElement[0], 'active', isActive);
        });
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.removeCharacterCount = /**
     * @return {?}
     */
    function () {
        this.renderer.invokeElementMethod(this.textareaElement.siblings('.character-counter'), 'remove');
        this.removeValidationClasses();
    };
    /**
     * @return {?}
     */
    MzTextareaDirective.prototype.removeValidationClasses = /**
     * @return {?}
     */
    function () {
        // reset valid/invalid state
        this.renderer.setElementClass(this.textareaElement[0], 'invalid', false);
        this.renderer.setElementClass(this.textareaElement[0], 'valid', false);
    };
    MzTextareaDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'textarea[mzTextarea], textarea[mz-textarea]',
                },] },
    ];
    /** @nocollapse */
    MzTextareaDirective.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional },] },
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    MzTextareaDirective.propDecorators = {
        "id": [{ type: Input },],
        "placeholder": [{ type: Input },],
        "label": [{ type: Input },],
        "length": [{ type: Input },],
    };
    return MzTextareaDirective;
}(HandlePropChanges));
export { MzTextareaDirective };
function MzTextareaDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzTextareaDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzTextareaDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    MzTextareaDirective.propDecorators;
    /** @type {?} */
    MzTextareaDirective.prototype.id;
    /** @type {?} */
    MzTextareaDirective.prototype.placeholder;
    /** @type {?} */
    MzTextareaDirective.prototype.label;
    /** @type {?} */
    MzTextareaDirective.prototype.length;
    /** @type {?} */
    MzTextareaDirective.prototype.textareaElement;
    /** @type {?} */
    MzTextareaDirective.prototype.textareaContainerElement;
    /** @type {?} */
    MzTextareaDirective.prototype.textareaValueSubscription;
    /** @type {?} */
    MzTextareaDirective.prototype.labelElement;
    /** @type {?} */
    MzTextareaDirective.prototype.ngControl;
    /** @type {?} */
    MzTextareaDirective.prototype.elementRef;
    /** @type {?} */
    MzTextareaDirective.prototype.renderer;
}

//# sourceMappingURL=data:application/json;base64,