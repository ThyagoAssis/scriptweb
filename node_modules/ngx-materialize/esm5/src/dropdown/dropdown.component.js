/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, Renderer, } from '@angular/core';
import { HandlePropChanges } from '../shared/index';
var MzDropdownComponent = /** @class */ (function (_super) {
    tslib_1.__extends(MzDropdownComponent, _super);
    function MzDropdownComponent(elementRef, renderer) {
        var _this = _super.call(this) || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        return _this;
    }
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initHandlers();
        this.initDropdownButtonElement();
        this.handleProperties();
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () { return _this.renderer.invokeElementMethod(_this.dropdownButtonElement, 'dropdown', ['close']); });
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.initDropdownButtonElement = /**
     * @return {?}
     */
    function () {
        this.dropdownButtonElement = $("#" + this.dropdownButtonId);
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.initHandlers = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.handlers = {
            align: function () { return _this.handleDropdown(); },
            belowOrigin: function () { return _this.handleDropdown(); },
            constrainWidth: function () { return _this.handleDropdown(); },
            dropdownButtonId: function () { return _this.handleDataActivates(); },
            gutter: function () { return _this.handleDropdown(); },
            hover: function () { return _this.handleDropdown(); },
            id: function () { return _this.handleDropdown(); },
            inDuration: function () { return _this.handleDropdown(); },
            outDuration: function () { return _this.handleDropdown(); },
            stopPropagation: function () { return _this.handleDropdown(); },
        };
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.handleDataActivates = /**
     * @return {?}
     */
    function () {
        this.renderer.setElementAttribute(this.dropdownButtonElement[0], 'data-activates', this.id);
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.handleDropdown = /**
     * @return {?}
     */
    function () {
        this.validateProperties();
        var /** @type {?} */ options = {
            alignment: this.align,
            belowOrigin: this.belowOrigin,
            constrainWidth: this.constrainWidth,
            gutter: this.gutter,
            hover: this.hover,
            inDuration: this.inDuration,
            outDuration: this.outDuration,
            stopPropagation: this.stopPropagation,
        };
        // Initialize dropdown button for dropdown
        this.renderer.invokeElementMethod(this.dropdownButtonElement, 'dropdown', [options]);
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.handleProperties = /**
     * @return {?}
     */
    function () {
        this.handleDataActivates();
        this.handleDropdown();
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () { return _this.renderer.invokeElementMethod(_this.dropdownButtonElement, 'dropdown', ['open']); });
    };
    /**
     * @return {?}
     */
    MzDropdownComponent.prototype.validateProperties = /**
     * @return {?}
     */
    function () {
        if (!this.id) {
            throw new Error('Attribute [id] from mz-dropdown is required. ' + this.elementRef.nativeElement);
        }
        if (this.dropdownButtonElement.length === 0) {
            throw new Error('Attribute [dropdownButtonId] from mz-dropdown is required and should be an existing element. ' +
                this.elementRef.nativeElement);
        }
    };
    MzDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mz-dropdown',
                    template: "<ul\n  class=\"dropdown-content\"\n  [attr.id]=\"id\"\n>\n  <ng-content></ng-content>\n</ul>",
                    styles: [""],
                },] },
    ];
    /** @nocollapse */
    MzDropdownComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    MzDropdownComponent.propDecorators = {
        "align": [{ type: Input },],
        "belowOrigin": [{ type: Input },],
        "constrainWidth": [{ type: Input },],
        "dropdownButtonId": [{ type: Input },],
        "gutter": [{ type: Input },],
        "hover": [{ type: Input },],
        "id": [{ type: Input },],
        "inDuration": [{ type: Input },],
        "outDuration": [{ type: Input },],
        "stopPropagation": [{ type: Input },],
    };
    return MzDropdownComponent;
}(HandlePropChanges));
export { MzDropdownComponent };
function MzDropdownComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MzDropdownComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MzDropdownComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    MzDropdownComponent.propDecorators;
    /** @type {?} */
    MzDropdownComponent.prototype.align;
    /** @type {?} */
    MzDropdownComponent.prototype.belowOrigin;
    /** @type {?} */
    MzDropdownComponent.prototype.constrainWidth;
    /** @type {?} */
    MzDropdownComponent.prototype.dropdownButtonId;
    /** @type {?} */
    MzDropdownComponent.prototype.gutter;
    /** @type {?} */
    MzDropdownComponent.prototype.hover;
    /** @type {?} */
    MzDropdownComponent.prototype.id;
    /** @type {?} */
    MzDropdownComponent.prototype.inDuration;
    /** @type {?} */
    MzDropdownComponent.prototype.outDuration;
    /** @type {?} */
    MzDropdownComponent.prototype.stopPropagation;
    /** @type {?} */
    MzDropdownComponent.prototype.dropdownButtonElement;
    /** @type {?} */
    MzDropdownComponent.prototype.elementRef;
    /** @type {?} */
    MzDropdownComponent.prototype.renderer;
}

//# sourceMappingURL=data:application/json;base64,